/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_canvas_board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/canvas_board */ \"./src/scripts/canvas_board.js\");\n/* harmony import */ var _scripts_sample_inputs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/sample_inputs */ \"./src/scripts/sample_inputs.js\");\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.querySelector(\"canvas\");\n  const ctx = canvas.getContext('2d');\n  canvas.height = 600;\n  canvas.width = 600;\n  const sampleInputs = new _scripts_sample_inputs__WEBPACK_IMPORTED_MODULE_1__.SampleInputs();\n  const board = new _scripts_canvas_board__WEBPACK_IMPORTED_MODULE_0__.CanvasBoard(null, 9, 600, 600, sampleInputs.sampleGroups);\n  board.update(ctx, null, sampleInputs.samplePenMarks, sampleInputs.samplePencilMarks);\n  canvas.addEventListener(\"click\", e => {\n    let y = e.clientY - e.target.getBoundingClientRect().top;\n    let x = e.clientX - e.target.getBoundingClientRect().left;\n    let cellNum = board.getCellNumber(x, y);\n    board.update(ctx, cellNum, sampleInputs.samplePenMarks, sampleInputs.samplePencilMarks);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUVBRSxRQUFRLENBQUNDLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxNQUFLO0VBQy9DLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRyxhQUFULENBQXVCLFFBQXZCLENBQWY7RUFDQSxNQUFNQyxHQUFHLEdBQUdGLE1BQU0sQ0FBQ0csVUFBUCxDQUFrQixJQUFsQixDQUFaO0VBQ0FILE1BQU0sQ0FBQ0ksTUFBUCxHQUFnQixHQUFoQjtFQUNBSixNQUFNLENBQUNLLEtBQVAsR0FBZSxHQUFmO0VBQ0EsTUFBTUMsWUFBWSxHQUFHLElBQUlULGdFQUFKLEVBQXJCO0VBQ0EsTUFBTVUsS0FBSyxHQUFHLElBQUlYLDhEQUFKLENBQWdCLElBQWhCLEVBQXNCLENBQXRCLEVBQXlCLEdBQXpCLEVBQThCLEdBQTlCLEVBQW1DVSxZQUFZLENBQUNFLFlBQWhELENBQWQ7RUFHQUQsS0FBSyxDQUFDRSxNQUFOLENBQWFQLEdBQWIsRUFBa0IsSUFBbEIsRUFBd0JJLFlBQVksQ0FBQ0ksY0FBckMsRUFBcURKLFlBQVksQ0FBQ0ssaUJBQWxFO0VBRUFYLE1BQU0sQ0FBQ0QsZ0JBQVAsQ0FBd0IsT0FBeEIsRUFBa0NhLENBQUQsSUFBTztJQUNwQyxJQUFJQyxDQUFDLEdBQUdELENBQUMsQ0FBQ0UsT0FBRixHQUFZRixDQUFDLENBQUNHLE1BQUYsQ0FBU0MscUJBQVQsR0FBaUNDLEdBQXJEO0lBQ0EsSUFBSUMsQ0FBQyxHQUFHTixDQUFDLENBQUNPLE9BQUYsR0FBWVAsQ0FBQyxDQUFDRyxNQUFGLENBQVNDLHFCQUFULEdBQWlDSSxJQUFyRDtJQUNBLElBQUlDLE9BQU8sR0FBR2QsS0FBSyxDQUFDZSxhQUFOLENBQW9CSixDQUFwQixFQUF1QkwsQ0FBdkIsQ0FBZDtJQUVBTixLQUFLLENBQUNFLE1BQU4sQ0FBYVAsR0FBYixFQUFrQm1CLE9BQWxCLEVBQTJCZixZQUFZLENBQUNJLGNBQXhDLEVBQXdESixZQUFZLENBQUNLLGlCQUFyRTtFQUNILENBTkQ7QUFPSCxDQWxCRCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzX3Byb2plY3QvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYW52YXNCb2FyZCB9IGZyb20gJy4vc2NyaXB0cy9jYW52YXNfYm9hcmQnXG5pbXBvcnQgeyBTYW1wbGVJbnB1dHMgfSBmcm9tICcuL3NjcmlwdHMvc2FtcGxlX2lucHV0cyc7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpPT4ge1xuICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJjYW52YXNcIik7XG4gICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgY2FudmFzLmhlaWdodCA9IDYwMDtcbiAgICBjYW52YXMud2lkdGggPSA2MDA7XG4gICAgY29uc3Qgc2FtcGxlSW5wdXRzID0gbmV3IFNhbXBsZUlucHV0cygpO1xuICAgIGNvbnN0IGJvYXJkID0gbmV3IENhbnZhc0JvYXJkKG51bGwsIDksIDYwMCwgNjAwLCBzYW1wbGVJbnB1dHMuc2FtcGxlR3JvdXBzKTtcblxuXG4gICAgYm9hcmQudXBkYXRlKGN0eCwgbnVsbCwgc2FtcGxlSW5wdXRzLnNhbXBsZVBlbk1hcmtzLCBzYW1wbGVJbnB1dHMuc2FtcGxlUGVuY2lsTWFya3MpO1xuXG4gICAgY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgICBsZXQgeSA9IGUuY2xpZW50WSAtIGUudGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcbiAgICAgICAgbGV0IHggPSBlLmNsaWVudFggLSBlLnRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuICAgICAgICBsZXQgY2VsbE51bSA9IGJvYXJkLmdldENlbGxOdW1iZXIoeCwgeSk7XG5cbiAgICAgICAgYm9hcmQudXBkYXRlKGN0eCwgY2VsbE51bSwgc2FtcGxlSW5wdXRzLnNhbXBsZVBlbk1hcmtzLCBzYW1wbGVJbnB1dHMuc2FtcGxlUGVuY2lsTWFya3MpO1xuICAgIH0pO1xufSk7XG4iXSwibmFtZXMiOlsiQ2FudmFzQm9hcmQiLCJTYW1wbGVJbnB1dHMiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjYW52YXMiLCJxdWVyeVNlbGVjdG9yIiwiY3R4IiwiZ2V0Q29udGV4dCIsImhlaWdodCIsIndpZHRoIiwic2FtcGxlSW5wdXRzIiwiYm9hcmQiLCJzYW1wbGVHcm91cHMiLCJ1cGRhdGUiLCJzYW1wbGVQZW5NYXJrcyIsInNhbXBsZVBlbmNpbE1hcmtzIiwiZSIsInkiLCJjbGllbnRZIiwidGFyZ2V0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwieCIsImNsaWVudFgiLCJsZWZ0IiwiY2VsbE51bSIsImdldENlbGxOdW1iZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/canvas_board.js":
/*!*************************************!*\
  !*** ./src/scripts/canvas_board.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CanvasBoard\": function() { return /* binding */ CanvasBoard; }\n/* harmony export */ });\nclass CanvasBoard {\n  constructor(sumClues, boardSize, gridWidth, gridHeight, sumGroups) {\n    this.sumClues = sumClues;\n    this.boardSize = boardSize;\n    this.gridWidth = gridWidth;\n    this.gridHeight = gridHeight;\n    this.sumGroups = sumGroups;\n    this.walls = [];\n  }\n\n  update(ctx, selectedCell, penMarks, pencilMarks) {\n    this.drawBackground(ctx);\n\n    if (selectedCell) {\n      this.highlightSelectedCell(ctx, selectedCell);\n    }\n\n    ;\n    this.drawSumsOvelay(ctx);\n    this.drawGridLines(ctx);\n    this.drawPenMarks(ctx, penMarks);\n    this.drawPencilMarks(ctx, penMarks, pencilMarks);\n  }\n\n  drawBackground(ctx) {\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, this.gridWidth, this.gridHeight);\n  }\n\n  drawGridLines(ctx) {\n    ctx.beginPath();\n    ctx.rect(0, 0, this.gridWidth, this.gridHeight);\n    ctx.setLineDash([]);\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 8;\n    ctx.stroke();\n\n    for (let i = 0; i < this.boardSize; i++) {\n      ctx.beginPath();\n      ctx.moveTo(0, this.gridHeight / this.boardSize * i);\n      ctx.lineTo(this.gridWidth, this.gridHeight / this.boardSize * i);\n      ctx.strokeStyle = \"black\";\n      ctx.lineWidth = 2;\n\n      if (i % 3 === 0) {\n        ctx.lineWidth = 4;\n      }\n\n      ;\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(this.gridWidth / this.boardSize * i, 0);\n      ctx.lineTo(this.gridWidth / this.boardSize * i, this.gridHeight);\n      ctx.strokeStyle = \"black\";\n      ctx.lineWidth = 2;\n\n      if (i % 3 === 0) {\n        ctx.lineWidth = 4;\n      }\n\n      ;\n      ctx.stroke();\n    }\n\n    ;\n  }\n\n  drawPenMarks(ctx, penMarkings) {\n    let currIndex = 0;\n\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (penMarkings[currIndex] != 0) {\n          ctx.font = '30px serif';\n          ctx.fillStyle = 'black';\n          ctx.fillText(`${penMarkings[currIndex]}`, this.gridWidth / 9 * j + 25, this.gridHeight / 9 * i + 45);\n        }\n\n        ;\n        currIndex++;\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  drawPencilMarks(ctx, penMarkings, pencilMarkings) {\n    let currIndex = 0;\n\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (penMarkings[currIndex] === 0) {\n          let pencilIndex = 0;\n\n          for (let c = 0; c < 3; c++) {\n            for (let r = 0; r < 3; r++) {\n              if (pencilMarkings[currIndex][pencilIndex] != -1) {\n                ctx.font = '15px serif';\n                ctx.fillStyle = \"black\";\n                ctx.fillText(`${pencilMarkings[currIndex][pencilIndex] + 1}`, this.gridWidth / 9 * j + r * 20 + 10, this.gridHeight / 9 * i + c * 20 + 20);\n              }\n\n              ;\n              pencilIndex++;\n            }\n\n            ;\n          }\n\n          ;\n        }\n\n        ;\n        currIndex++;\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  highlightSelectedCell(ctx, cellNumber) {\n    let currIndex = 0;\n\n    for (let i = 0; i < this.boardSize; i++) {\n      for (let j = 0; j < this.boardSize; j++) {\n        if (currIndex === cellNumber) {\n          ctx.rect(this.gridHeight / 9 * j, this.gridWidth / 9 * i, this.gridHeight / 9, this.gridWidth / 9);\n          ctx.fillStyle = \"#d9d3c9\";\n          ctx.fill();\n        } else if (currIndex > cellNumber) {\n          break;\n        }\n\n        ;\n        currIndex++;\n      }\n    }\n  }\n\n  getCellNumber(x, y) {\n    let currIndex = 0;\n\n    for (let i = 0; i < this.boardSize; i++) {\n      for (let j = 0; j < this.boardSize; j++) {\n        if (this.gridHeight / this.boardSize * j < x && x < this.gridHeight / this.boardSize * j + this.gridHeight / this.boardSize) {\n          if (this.gridWidth / this.boardSize * i < y && y < this.gridWidth / this.boardSize * i + this.gridWidth / this.boardSize) {\n            return currIndex;\n          }\n\n          ;\n        }\n\n        ;\n        currIndex++;\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  getAdjacentCells(index) {\n    let north = index - this.boardSize;\n    let east = index + 1;\n    let south = index + this.boardSize;\n    let west = index - 1;\n    const adjacent = {\n      n: north,\n      e: east,\n      s: south,\n      w: west\n    };\n    return adjacent;\n  }\n\n  getWalls() {\n    const walls = [];\n\n    for (let i = 0; i < this.boardSize ** 2; i++) {\n      walls.push({\n        n: false,\n        e: false,\n        s: false,\n        w: false\n      });\n    }\n\n    for (let i = 0; i < this.sumGroups.length; i++) {\n      for (let j = 0; j < this.sumGroups[i].cells.length; j++) {\n        let adjacentCells = this.getAdjacentCells(this.sumGroups[i].cells[j]);\n\n        if (!this.sumGroups[i].cells.includes(adjacentCells.n)) {\n          walls[this.sumGroups[i].cells[j]].n = true;\n        }\n\n        ;\n\n        if (!this.sumGroups[i].cells.includes(adjacentCells.e)) {\n          walls[this.sumGroups[i].cells[j]].e = true;\n        }\n\n        ;\n\n        if (!this.sumGroups[i].cells.includes(adjacentCells.s)) {\n          walls[this.sumGroups[i].cells[j]].s = true;\n        }\n\n        ;\n\n        if (!this.sumGroups[i].cells.includes(adjacentCells.w)) {\n          walls[this.sumGroups[i].cells[j]].w = true;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n    return walls;\n  }\n\n  drawSumsOvelay(ctx) {\n    if (this.walls.length === 0) {\n      this.walls = this.getWalls();\n    }\n\n    console.log(this.walls);\n    let currIndex = 0;\n\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.walls[currIndex].n) {\n          ctx.beginPath();\n          ctx.setLineDash([5, 5]);\n          ctx.strokeStyle = 'grey';\n          ctx.moveTo(this.gridWidth / 9 * j + 7, this.gridHeight / 9 * i + 7);\n          ctx.lineTo(this.gridWidth / 9 * j + this.gridWidth / 9 - 7, this.gridWidth / 9 * i + 7);\n          ctx.stroke();\n        }\n\n        ;\n\n        if (this.walls[currIndex].e) {\n          ctx.beginPath();\n          ctx.setLineDash([5, 5]);\n          ctx.strokeStyle = 'grey';\n          ctx.moveTo(this.gridWidth / 9 * j + this.gridWidth / 9 - 7, this.gridHeight / 9 * i + 7);\n          ctx.lineTo(this.gridWidth / 9 * j + this.gridWidth / 9 - 7, this.gridHeight / 9 * i + this.gridHeight / 9 - 7);\n          ctx.stroke();\n        }\n\n        ;\n\n        if (this.walls[currIndex].s) {\n          console.log('found s');\n          ctx.beginPath();\n          ctx.setLineDash([5, 5]);\n          ctx.strokeStyle = 'grey';\n          ctx.moveTo(this.gridWidth / 9 * j + 7, this.gridHeight / 9 * i + (this.gridHeight / 9 - 7));\n          ctx.lineTo(this.gridWidth / 9 * j + this.gridWidth / 9 - 7, this.gridHeight / 9 * i + this.gridHeight / 9 - 7);\n          ctx.stroke();\n        }\n\n        ;\n\n        if (this.walls[currIndex].w) {\n          ctx.beginPath();\n          ctx.setLineDash([5, 5]);\n          ctx.strokeStyle = 'grey';\n          ctx.moveTo(this.gridWidth / 9 * j + 7, this.gridHeight / 9 * i + 7);\n          ctx.lineTo(this.gridWidth / 9 * j + 7, this.gridHeight / 9 * i + this.gridHeight / 9 - 7);\n          ctx.stroke();\n        }\n\n        ;\n        currIndex++;\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n}\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/canvas_board.js\n");

/***/ }),

/***/ "./src/scripts/sample_inputs.js":
/*!**************************************!*\
  !*** ./src/scripts/sample_inputs.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SampleInputs\": function() { return /* binding */ SampleInputs; }\n/* harmony export */ });\nclass SampleInputs {\n  constructor() {\n    let gridSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 81;\n    this.gridSize = gridSize;\n    this.samplePenMarks = [6, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 6, 0, 0, 8, 0, 9, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 4, 1, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 4, 7, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 2, 0, 3, 0, 0, 9, 0, 0, 0, 0, 0, 0, 1, 0, 0, 7, 0, 6];\n    this.blankPenMarks = new Array(this.gridSize).fill(0);\n    this.samplePencilMarks = [];\n\n    for (let i = 0; i < this.gridSize; i++) {\n      let cell = [];\n\n      for (let j = 0; j < 9; j++) {\n        cell.push(-1);\n      }\n\n      this.samplePencilMarks.push(cell);\n    }\n\n    ;\n    this.sampleGroups = [{\n      sum: 11,\n      cells: [0, 9, 10, 19]\n    }, {\n      sum: 25,\n      cells: [1, 2, 3, 12]\n    }, {\n      sum: 14,\n      cells: [4, 13]\n    }, {\n      sum: 9,\n      cells: [5, 6]\n    }, {\n      sum: 12,\n      cells: [7, 8]\n    }, {\n      sum: 15,\n      cells: [11, 20]\n    }, {\n      sum: 4,\n      cells: [14, 15]\n    }, {\n      sum: 14,\n      cells: [16, 25]\n    }, {\n      sum: 6,\n      cells: [17, 26]\n    }, {\n      sum: 40,\n      cells: [18, 27, 36, 37, 38, 39, 45, 54]\n    }, {\n      sum: 3,\n      cells: [21, 30]\n    }, {\n      sum: 15,\n      cells: [22, 31]\n    }, {\n      sum: 9,\n      cells: [23, 24]\n    }, {\n      sum: 8,\n      cells: [28, 29]\n    }, {\n      sum: 12,\n      cells: [32, 33]\n    }, {\n      sum: 38,\n      cells: [34, 35, 42, 43, 44, 52, 53]\n    }, {\n      sum: 11,\n      cells: [40, 41]\n    }, {\n      sum: 15,\n      cells: [46, 47]\n    }, {\n      sum: 13,\n      cells: [48, 57]\n    }, {\n      sum: 6,\n      cells: [49, 58]\n    }, {\n      sum: 4,\n      cells: [50, 51]\n    }, {\n      sum: 17,\n      cells: [55, 63, 64, 72]\n    }, {\n      sum: 7,\n      cells: [56, 65]\n    }, {\n      sum: 13,\n      cells: [59, 60]\n    }, {\n      sum: 10,\n      cells: [61, 70]\n    }, {\n      sum: 6,\n      cells: [62, 71]\n    }, {\n      sum: 26,\n      cells: [66, 73, 74, 75]\n    }, {\n      sum: 4,\n      cells: [67, 76]\n    }, {\n      sum: 15,\n      cells: [68, 69]\n    }, {\n      sum: 11,\n      cells: [77, 78]\n    }, {\n      sum: 12,\n      cells: [79, 80]\n    }];\n  }\n\n}\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/sample_inputs.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc19wcm9qZWN0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;